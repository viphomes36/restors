
; /* Start:"a:4:{s:4:"full";s:117:"/bitrix/templates/restproperty_v2/components/bitrix/news/turkey/bitrix/news.detail/.default/script.js?166440001418194";s:6:"source";s:101:"/bitrix/templates/restproperty_v2/components/bitrix/news/turkey/bitrix/news.detail/.default/script.js";s:3:"min";s:0:"";s:3:"map";s:0:"";}"*/
$(function(){

	var currentDate = new Date(),
		currentDateFrom = new Date();
		currentDateFrom.setDate(currentDateFrom.getDate() + 14);

		
	$('[data-toggle="datepicker-rental-from"]').datepicker({
		months: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],
		days: ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'],
		daysMin: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],
		monthsShort: ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],
		weekStart: 1,
		format: 'dd.mm.yyyy',
		startDate: currentDate,
		autoHide: true
	});
	
	$('[data-toggle="datepicker-rental-to"]').datepicker({
		months: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],
		days: ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'],
		daysMin: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],
		monthsShort: ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],
		weekStart: 1,
		format: 'dd.mm.yyyy',
		startDate: currentDateFrom,
		autoHide: true
	});
		
	$('[data-toggle="datepicker-rental-from"]').on('pick.datepicker', function (e) {
		var inputTh = $(this),
			blockRent = inputTh.closest('.detail-block-price');
		dateUpdate(e.date, differenceDate(), blockRent);
		console.log(e.date);
		//totalRental(differenceDate(), blockRent);
	})
	
	$('[data-toggle="datepicker-rental-to"]').on('pick.datepicker', function (e) {
		var inputTh = $(this),
			blockRent = inputTh.closest('.information-rental');
		//totalRental(differenceDate(), blockRent);
	})
	
	
	/*function totalRental(quntDay, blockRent){
			var priceDay = blockRent.find('.price-rent-day').text(),
			priceService = 48,
			sumDayRental = +priceDay * +quntDay,
			totalSum = +sumDayRental + +priceService;
			blockRent.find('.qunt-rent-day').text(quntDay);
			blockRent.find('.sumDayR').text(sumDayRental);
			blockRent.find('.sumRental').text(totalSum);
	}*/
	$(document).on('change', '.select-dates-rental', function(){
		totalRental();
	})

/*
Стоимоть аренды квартиры на сайте 900 евро.

Если арендатор арендует квартиру менбше чем на месяц, то из суммы 900 минусуем нашу коммисию 300 евро , далее 600 /30 дней = 20 евро в день  20 * на количество дней проживания и плюсуем 300 евро.

 

Пример  бронирования на 21 день  1. 900-300=600,  2.600/30=20 , 3.20*21=420 € , 4. 420+300=720 €

Стоимоть проживания на 3 недели 720 €


*/

	function totalRental(){

		$('.block-price-rental').each(function(){
			//priceDay = blockRentElem.find('.price-rent-day').text().replace(/\s/g, ''),
			var blockRentElem = $(this),
			date1 = blockRentElem.find('[data-toggle="datepicker-rental-from"]').val().split('.'),
			date2 = blockRentElem.find('[data-toggle="datepicker-rental-to"]').val().split('.'),
			/*dateRenaltFrom = new Date(date1[1]+'-'+date1[0]+'-'+date1[2]),
			dateRenaltTo = new Date(date2[1]+'-'+date2[0]+'-'+date2[2]),*/
			dateRenaltFrom = new Date(+date1[2], +date1[1], +date1[0]);
			dateRenaltTo = new Date(+date2[2], +date2[1], +date2[0]);
			priceMounth = blockRentElem.find('.price-rent-mk-mounth').text().replace(/(\W|[a-zA-Z])/g, ''),
			quntDay = Math.ceil(Math.abs(dateRenaltTo.getTime() - dateRenaltFrom.getTime()) / (1000 * 3600 * 24)),
			priceDay = priceMounth / 30,
			priceService = blockRentElem.find('.price-service-rental').text().replace(/\s/g, ''),
			sumDayRental = +priceDay * +quntDay,
			totalSum = +sumDayRental + +priceService;
			
			if(quntDay < 30){
				var priceNew = (+priceMounth - 300) / 30 * quntDay + 300,
					newPriceDay = (+priceMounth - 300) / 30,
					newPriceRent = newPriceDay * quntDay + 300,
					newTotalSum = newPriceRent + +priceService;
				//blockRentElem.find('.price-rent-day').text(newPriceDay);
				blockRentElem.find('.qunt-rent-day').text(quntDay.toFixed());
				blockRentElem.find('.sumDayR').text(newPriceRent.toFixed());
				blockRentElem.find('.sumRental').text((+priceNew + +priceService).toFixed());
				//blockRentElem.find('.sumRentalWithClean').text((priceNew + +priceService).toFixed());
			}else{
				//blockRentElem.find('.price-rent-day').text(priceDay);
				blockRentElem.find('.qunt-rent-day').text(quntDay.toFixed());
				blockRentElem.find('.sumDayR').text(sumDayRental.toFixed());
				blockRentElem.find('.sumRental').text(totalSum.toFixed());
			}
			//console.log(quntDay, priceNew);

				
		})	

	}

	function dateUpdate(dateFromArg, diffDate, blockRent){
		var dateFrom = new Date(dateFromArg),
			dateTo = new Date(dateFromArg);
			dateTo.setDate(dateTo.getDate() + 14);
			
			if(diffDate <= 14){
				blockRent.find('[data-toggle="datepicker-rental-to"]').datepicker('setStartDate', dateTo);
				blockRent.find('[data-toggle="datepicker-rental-to"]').datepicker('setDate', dateTo);
			}
	}
	
	function differenceDate(){
		var date1 = $('[data-toggle="datepicker-rental-from"]').val().split('.'),
			date2 = $('[data-toggle="datepicker-rental-to"]').val().split('.'),
			//dateRenaltFrom = new Date(date1[1]+'-'+date1[0]+'-'+date1[2]),
			//dateRenaltTo = new Date(date2[1]+'-'+date2[0]+'-'+date2[2]),
			dateRenaltFrom = new Date(+date1[2], +date1[1], +date1[0]),
			dateRenaltTo = new Date(+date2[2], +date2[1], +date2[0]),
			quntDay = Math.ceil(Math.abs(dateRenaltTo.getTime() - dateRenaltFrom.getTime()) / (1000 * 3600 * 24));
			return quntDay;
	}
	
	
	function resultCredit(proc, _calc){

		var creditComponent = _calc,
			priceApartVal =  creditComponent.find('.all-price-credit').val().replace(/ /g, ''),
			initialPrice = creditComponent.find('.price-credit-input'),
			initialPriceVal = initialPrice.val().replace(/ /g, ''),
			procForm = creditComponent.find('#procCredit').val().replace(/ /g, ''),
			//termVal = creditComponent.find('.jq-selectbox__select-text').text().replace(/ /g, '') * 12,
			termVal = creditComponent.find('.jq-selectbox__select-text').text().replace(/ /g, '') * 12,
			rateVal = creditComponent.find('.rate-credit-input').val().replace(/ /g, '') / (12 * 100),
			firstPrice = null,
			monthlyPayment = null,
			arSumm = null;
		
		if(!proc){
			proc = procForm;
		}
		
		firstPrice = (+priceApartVal * +proc / 100).toFixed();
		arSumm = +priceApartVal - +firstPrice;
		initialPrice.val(firstPrice);
		
        dp = 1 - +firstPrice / +priceApartVal;
        priceApartVal = +priceApartVal * dp;
		//monthlyPayment = (+arSumm*(+rateVal/12) / (1-(1/Math.pow(1+rateVal/12, +termVal*12)))).toFixed();
		
		
		monthlyPayment = (+priceApartVal.toFixed() * (rateVal * Math.pow(1 + rateVal, termVal))) / (Math.pow(1 + rateVal, termVal) - 1);
		$('.js-price-credit').text(monthlyPayment.toFixed());
	}
	
	var handle = $( "#custom-credit" );
	$( "#slider-credit, #slider-credit-line" ).slider({
	  min: 4,
	  max: 81,
	  value: 1,
	  create: function() {
		$('.hide-proc-credit').val($( this ).slider( "value" ));
	  },
	  slide: function( event, ui ) {
		$('.hide-proc-credit').val($( this ).slider( "value" ));
		resultCredit($( this ).slider( "value" ), $('#calc-credit'));
	  }
	});

	$('.desc-range-proc').on('change', function(){
		var rangeElement = $(this),
			procentRange = rangeElement.val(),
			blockCalculator = rangeElement.closest('#calc-credit');
			$('.hide-proc-credit').val(procentRange);
			resultCredit(procentRange, blockCalculator);
	})

	$('.calculate-credit > #calc-credit').on('change', '.price-credit-input', function(){
		var inputElementPrice = $(this),
		blockCalculator = inputElementPrice.closest('#calc-credit'),
		rangeLine = blockCalculator.find('#procent-credit-range'),
		priceObject = blockCalculator.find('.all-price-credit').val().replace(/\s/g, ''),
		priceValue = inputElementPrice.val(),
		procentPrice = (+priceValue / +priceObject * 100).toFixed();
		rangeLine.val(procentPrice);
		if(procentPrice < 50){
			procentPrice = 50;
		}else if(procentPrice > 80){
			procentPrice = 80;
		}
		$('.hide-proc-credit').val(procentPrice);
		resultCredit(procentPrice, blockCalculator);
	})
	
	$('.calculate-credit > #calc-credit').on('change', '.select-credit', function(){
		var inputElementPrice = $(this),
		blockCalculator = inputElementPrice.closest('#calc-credit');
		resultCredit(0, blockCalculator);
	})
	
	$('.calculate-credit > #calc-credit').on('change', '.rate-credit-input', function(){
		var inputElementPrice = $(this),
		blockCalculator = inputElementPrice.closest('#calc-credit');
		resultCredit(0, blockCalculator);
	})
	
	$('#calc-credit').on('change', function(){
		resultCredit(0, $(this));
	})
	
	/*$('#calc-credit-mobile').on('change', function(){
		resultCredit(0, $(this));
	})*/
	
	$('.calculate-credit').each(function(i,e){
		var _calcBlock = $(this).children('#calc-credit');
		resultCredit(0, _calcBlock);
	})
	
	$(window).on('load', function(){
		totalRental();
	})
	
})

$(function(){
	if($('body').find('.block-rent-calendar').length){
		function calendarBig(year) {
		for (var m = 0; m <= 11; m++) {
		var D = new Date(year,[m],1),
			Dlast = new Date(D.getFullYear(),D.getMonth()+1,0).getDate(),
			DNlast = new Date(D.getFullYear(),D.getMonth(),Dlast).getDay(),
			DNfirst = new Date(D.getFullYear(),D.getMonth(),1).getDay(),
			calendar = '<tr>';
		
		if (DNfirst != 0) {
		  for(var  i = 1; i < DNfirst; i++) calendar += '<td>';
		}else{
		  for(var  i = 0; i < 6; i++) calendar += '<td>';
		}
		
		for(var  i = 1; i <= Dlast; i++) {
		  if (i == new Date().getDate() && D.getFullYear() == new Date().getFullYear() && D.getMonth() == new Date().getMonth()) {
			calendar += '<td class="today">' + i;
		  }else{
			if (
				(i == 1 && D.getMonth() == 0 && ((D.getFullYear() > 1897 && D.getFullYear() < 1930) || D.getFullYear() > 1947)) ||
				(i == 2 && D.getMonth() == 0 && D.getFullYear() > 1992) ||
				((i == 3 || i == 4 || i == 5 || i == 6 || i == 8) && D.getMonth() == 0 && D.getFullYear() > 2004) ||
				(i == 7 && D.getMonth() == 0 && D.getFullYear() > 1990) ||
				(i == 23 && D.getMonth() == 1 && D.getFullYear() > 2001) ||
				(i == 8 && D.getMonth() == 2 && D.getFullYear() > 1965) ||
				(i == 1 && D.getMonth() == 4 && D.getFullYear() > 1917) ||
				(i == 9 && D.getMonth() == 4 && D.getFullYear() > 1964) ||
				(i == 12 && D.getMonth() == 5 && D.getFullYear() > 1990) ||
				(i == 7 && D.getMonth() == 10 && (D.getFullYear() > 1926 && D.getFullYear() < 2005)) ||
				(i == 8 && D.getMonth() == 10 && (D.getFullYear() > 1926 && D.getFullYear() < 1992)) ||
				(i == 4 && D.getMonth() == 10 && D.getFullYear() > 2004)
			   ) {
			  calendar += '<td class="holiday">' + i;
			}else{
			  calendar += '<td>' + i;
			}
		  }
		  if (new Date(D.getFullYear(),D.getMonth(),i).getDay() == 0) {
			calendar += '<tr>';
		  }
		}
		
		if (DNlast != 0) {
		  for(var  i = DNlast; i < 7; i++) calendar += '<td>';
		}
		
		
		
		if(location.hostname == "restproperty.ru"){
			document.querySelector('#calendarBig table[data-m="' + [m] + '"] tbody').innerHTML = calendar;
			document.querySelector('#calendarBig > thead td:nth-child(2)').innerHTML = 'Календарь на ' + year + ' год';
			if(parseFloat(parseFloat(year)-1) > 2015){
				document.querySelector('#calendarBig > thead td:nth-child(1)').innerHTML = 'Календарь на ' + parseFloat(parseFloat(year)-1) + ' год';
			}
			document.querySelector('#calendarBig > thead td:nth-child(3)').innerHTML = 'Календарь на ' + parseFloat(parseFloat(year)+1) + ' год';
		}else if(location.hostname == "restproperty.com"){
			document.querySelector('#calendarBig table[data-m="' + [m] + '"] tbody').innerHTML = calendar;
			document.querySelector('#calendarBig > thead td:nth-child(2)').innerHTML = 'Calendar ' + year + ' year';
			if(parseFloat(parseFloat(year)-1) > 2015){
				document.querySelector('#calendarBig > thead td:nth-child(1)').innerHTML = 'Calendar ' + parseFloat(parseFloat(year)-1) + ' year';
			}
			document.querySelector('#calendarBig > thead td:nth-child(3)').innerHTML = 'Calendar ' + parseFloat(parseFloat(year)+1) + ' year';
		}else if(location.hostname == "restproperty.de"){
			document.querySelector('#calendarBig table[data-m="' + [m] + '"] tbody').innerHTML = calendar;
			document.querySelector('#calendarBig > thead td:nth-child(2)').innerHTML = 'Kalender ' + year + '';
			if(parseFloat(parseFloat(year)-1) > 2015){
				document.querySelector('#calendarBig > thead td:nth-child(1)').innerHTML = 'Kalender ' + parseFloat(parseFloat(year)-1) + '';
			}
			document.querySelector('#calendarBig > thead td:nth-child(3)').innerHTML = 'Kalender ' + parseFloat(parseFloat(year)+1) + '';
		}else if(location.hostname == "restproperty.net"){
			document.querySelector('#calendarBig table[data-m="' + [m] + '"] tbody').innerHTML = calendar;
			document.querySelector('#calendarBig > thead td:nth-child(2)').innerHTML = 'تقويم ' + year + ' عام';
			if(parseFloat(parseFloat(year)-1) > 2015){
				document.querySelector('#calendarBig > thead td:nth-child(1)').innerHTML = 'تقويم ' + parseFloat(parseFloat(year)-1) + ' عام';
			}
			document.querySelector('#calendarBig > thead td:nth-child(3)').innerHTML = 'تقويم ' + parseFloat(parseFloat(year)+1) + ' عام';
		}else if(location.hostname == "restproperty.com.tr"){
			document.querySelector('#calendarBig table[data-m="' + [m] + '"] tbody').innerHTML = calendar;
			document.querySelector('#calendarBig > thead td:nth-child(2)').innerHTML = 'تقويم ' + year + ' عام';
			if(parseFloat(parseFloat(year)-1) > 2015){
				document.querySelector('#calendarBig > thead td:nth-child(1)').innerHTML = 'تقويم ' + parseFloat(parseFloat(year)-1) + ' عام';
			}
			document.querySelector('#calendarBig > thead td:nth-child(3)').innerHTML = 'تقويم ' + parseFloat(parseFloat(year)+1) + ' عام';
		}
		
		
		// абзац создаёт сообщения
		for (var k = 1; k <= document.querySelectorAll('#calendarTable div').length; k++) {
		  var myD = document.querySelectorAll('#calendarBig table td'),
			  my = document.querySelector('#calendarTable div:nth-child(' + [k] + ')');
		  for (var i = 0; i < myD.length; i++) {
			if (my.dataset.yyyy) {
			  if (myD[i].innerHTML == my.dataset.dd && myD[i].parentNode.parentNode.parentNode.dataset.m == (my.dataset.mm - 1) && year == my.dataset.yyyy) {
				myD[i].title = my.dataset.text;
				if (my.dataset.link) {
				  myD[i].innerHTML = '<a href="' + my.dataset.link + '" target="_blank">' + myD[i].innerHTML + '</a>';
				}
			  }
			}else{
			  if (myD[i].innerHTML == my.dataset.dd && myD[i].parentNode.parentNode.parentNode.dataset.m == (my.dataset.mm - 1)) {
				myD[i].title = my.dataset.text;
				if (my.dataset.link) {
				  myD[i].innerHTML = '<a href="' + my.dataset.link + '" target="_blank">' + myD[i].innerHTML + '</a>';
				}
			  }
			}
		  }
		}
		
		}}
		
		if($('#calendarBig').length != 0){
			calendarBig(new Date().getFullYear());

			document.querySelector('#calendarBig > thead td:nth-child(1)').onclick = calendarBigG;
			document.querySelector('#calendarBig > thead td:nth-child(3)').onclick = calendarBigG;
			function calendarBigG() {calendarBig(this.innerHTML.replace(/[^\d]/gi, ''));}	

		}


	if(dataCalendar){
		var mes, day,d,zn_c1,zn_c2,zn_c3,zn_c4, tableGod,initYear;
			mes = dataCalendar;
			var d = $.parseJSON(mes);
			/*$.each(d, function(m, day) {
			});*/
			

			function reloadCalendar(godPost){
				var startYear = new Date(), testGod, twoYear, twoTestGod;
				startYear = startYear.getFullYear();
				$.each(d, function(year, day) {
				god = year.split('-');
				
				if(god[1] == undefined){
					god[1] = '2016';
				}
			
				testGod = god[1];
				if(String(god[1]).indexOf(',')){
					twoYear = String(god[1]).split(',');
					$.each(twoYear, function(oYear, tYear){
						twoTestGod = tYear;

					$('#calendarBig').find('table').each(function(e,i){
							
							//m = god.split('-');
							m = god[0];
					if(+testGod == +godPost || +twoTestGod == +godPost){
							if($(this).data('m') == m - 1){
								$(this).find('td').each(function(e,i){
								var d_n = $(this).text();
								var d_t = $(this);
									$.each(day, function(j, kd) {
									if(kd.indexOf('-') + 1) {
										if(kd.length >= 4){
											if(kd[2] == '-'){
												zn_c1 = kd[0] + kd[1];
												zn_c2 = kd[3] + kd[4];
											}else{
												zn_c1 = kd[0];
												zn_c2 = kd[2] + kd[3];
											}
											if(Number(d_n) >= Number(zn_c1) && Number(d_n) <= Number(zn_c2)){
												d_t.css('background-color', '#FFD073');
											}	
			
										}else{
											zn_c3 = kd[0];
											zn_c4 = kd[2];

											if(Number(d_n) >= Number(zn_c3) && Number(d_n) <= Number(zn_c4)){
												d_t.css('background-color', '#FFD073');
											}
										}
									}else{
										if(d_n == kd){
											d_t.css('background-color', '#FFD073');
										}
									}			
									})	
								})
							}
					}
					});
						})
				}
			});
		}	

		initYear = new Date();
		initYear = initYear.getFullYear();	
		reloadCalendar(initYear);

		$('#calendarBig > thead td:nth-child(1)').on('click', function(){
			tableGod = $('#calendarBig > thead td:nth-child(2)').text();
			tableGod = tableGod.replace(/\D+/g,"");
			reloadCalendar(tableGod);
		})

		$('#calendarBig > thead td:nth-child(3)').on('click', function(){
			tableGod = $('#calendarBig > thead td:nth-child(2)').text();
			tableGod = tableGod.replace(/\D+/g,"");
			reloadCalendar(tableGod);
		})
	}	
	}
})


	/*$('.button_pay').on('click', function(){
		console.log(123);
		$('.modal-pay').addClass('open-modal');
		$('.over-bg').addClass('open-over');
	})*/


/* End */
;
; /* Start:"a:4:{s:4:"full";s:112:"/bitrix/templates/restproperty_v2/components/bitrix/system.pagenavigation/pagination_new/script.js?1665386022776";s:6:"source";s:98:"/bitrix/templates/restproperty_v2/components/bitrix/system.pagenavigation/pagination_new/script.js";s:3:"min";s:0:"";s:3:"map";s:0:"";}"*/
/*$(function(){

	function goPage(inputP){
		var numberPage = inputP.val(),
			getValue = location.search,
			nextPageNumber = inputP.data('pagenext'),
			nextPage = 'PAGEN_'+nextPageNumber+'='+numberPage,
			reqGet;

		if(getValue.length != 0){
			if(/PAGEN_[0-9+]=[0-9+]/g.test(getValue)){
				reqGet = getValue.replace(/PAGEN_[0-9+]=[0-9+]/g, nextPage);
			}else{
				reqGet = getValue+'&'+nextPage;
			}
		}else{
			reqGet = '?'+nextPage;
		}

		if(numberPage){
			//location.search = '?PAGEN_1='+numberPage;
			location.search = reqGet;
		}
	}

	$('.input-page').on('change', function(){
		var _inputPage = $(this);
		goPage(_inputPage);
	})

	$('.input-page').on('keyup', function(){
		var _inputPage = $(this);
		if(keyCode == 13){
			goPage(_inputPage);
		}

	})
})*/

/* End */
;; /* /bitrix/templates/restproperty_v2/components/bitrix/news/turkey/bitrix/news.detail/.default/script.js?166440001418194*/
; /* /bitrix/templates/restproperty_v2/components/bitrix/system.pagenavigation/pagination_new/script.js?1665386022776*/
